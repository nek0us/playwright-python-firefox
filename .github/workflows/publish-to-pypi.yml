name: Publish

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-2022, macos-12]
        # 包含 ARM 架构支持
        include:
          - os: macos-12
            arch: arm64
          - os: macos-12
            arch: x86_64
          - os: ubuntu-22.04
            arch: x86_64
          - os: ubuntu-22.04
            arch: aarch64
            emulator: qemu-arm
          - os: windows-2022
            arch: AMD64

    steps:
      - uses: actions/checkout@v4
      
      # macOS ARM 架构特殊处理
      - name: Set up macOS ARM
        if: matrix.os == 'macos-12' && matrix.arch == 'arm64'
        run: |
          echo "CMAKE_OSX_ARCHITECTURES=arm64" >> $GITHUB_ENV
          echo "CIBW_ARCHS_MACOS=arm64" >> $GITHUB_ENV
      
      # Linux ARM 架构设置
      - name: Set up QEMU for ARM
        if: matrix.arch == 'aarch64'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      
      # 安装 cibuildwheel 和构建工具
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.16.2
      
      # 配置包构建选项
      - name: Set build options
        run: |
          echo "CIBW_BUILD=cp3*-*" >> $GITHUB_ENV
          echo "CIBW_BEFORE_ALL_LINUX=apt-get update && apt-get install -y build-essential" >> $GITHUB_ENV
          echo "CIBW_BEFORE_ALL_WINDOWS=choco install -y vcbuildtools" >> $GITHUB_ENV
          echo "CIBW_ENVIRONMENT_LINUX=PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1" >> $GITHUB_ENV
          echo "CIBW_ENVIRONMENT_WINDOWS=PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1" >> $GITHUB_ENV
          echo "CIBW_ENVIRONMENT_MACOS=PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1" >> $GITHUB_ENV
      
      # 执行多平台构建
      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ARCHS: ${{ matrix.arch || 'auto' }}
          CIBW_PLATFORM: ${{ matrix.os }}
      
      # 上传生成的 wheel 文件
      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl

  sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      
      - name: Install build tools
        run: python -m pip install build
      
      - name: Build sdist
        run: python -m build --sdist --outdir dist/
      
      - uses: actions/upload-artifact@v3
        with:
          name: sdist
          path: dist/*.tar.gz

  publish:
    name: Publish to PyPI
    needs: [build-wheels, sdist]
    runs-on: ubuntu-latest
    steps:
      # 下载所有构建产物
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: wheels
          path: dist
      - name: Download sdist
        uses: actions/download-artifact@v3
        with:
          name: sdist
          path: dist
      
      # 发布到 PyPI
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true
          verbose: true